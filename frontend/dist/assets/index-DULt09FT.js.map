{"version":3,"file":"index-DULt09FT.js","sources":["../../node_modules/react-dom/client.js","../../src/components/ui/Header.tsx","../../src/components/ui/TabNavigation.tsx","../../src/services/api.ts","../../src/stores/videoStore.ts","../../src/components/forms/TextToVideoForm.tsx","../../src/components/forms/ImageToVideoForm.tsx","../../src/components/status/JobStatusCard.tsx","../../src/components/status/JobStatusList.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\nimport { Video, Zap, Github, ExternalLink } from 'lucide-react';\n\nconst Header: React.FC = () => {\n  return (\n    <header className=\"bg-white border-b border-gray-200 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo and brand */}\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"bg-gradient-to-r from-primary-600 to-primary-700 p-2 rounded-lg\">\n              <Video className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-gray-900\">AI Video Creator</h1>\n              <p className=\"text-sm text-gray-500\">Powered by AI</p>\n            </div>\n          </div>\n\n          {/* Status indicator and links */}\n          <div className=\"flex items-center space-x-4\">\n            {/* Live status indicator */}\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-2 h-2 bg-success-500 rounded-full animate-pulse\"></div>\n              <span className=\"text-sm text-gray-600\">Live</span>\n            </div>\n\n            {/* API Documentation link */}\n            <a\n              href=\"https://ai-video-creator-irf1.onrender.com/docs\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center space-x-1 px-3 py-1.5 text-sm text-primary-600 hover:text-primary-700 hover:bg-primary-50 rounded-md transition-colors\"\n            >\n              <Zap className=\"h-4 w-4\" />\n              <span>API Docs</span>\n              <ExternalLink className=\"h-3 w-3\" />\n            </a>\n\n            {/* GitHub link */}\n            <a\n              href=\"https://github.com/djyalu/ai_video_creator\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"flex items-center space-x-1 px-3 py-1.5 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100 rounded-md transition-colors\"\n            >\n              <Github className=\"h-4 w-4\" />\n              <span>GitHub</span>\n              <ExternalLink className=\"h-3 w-3\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { Type, Image, Clock } from 'lucide-react';\n\ninterface TabNavigationProps {\n  activeTab: string;\n  onTabChange: (tab: string) => void;\n  jobCount?: number;\n}\n\nconst TabNavigation: React.FC<TabNavigationProps> = ({ activeTab, onTabChange, jobCount = 0 }) => {\n  const tabs = [\n    {\n      id: 'text-to-video',\n      name: 'Text to Video',\n      icon: Type,\n      description: 'Generate videos from text prompts'\n    },\n    {\n      id: 'image-to-video',\n      name: 'Image to Video',\n      icon: Image,\n      description: 'Animate images with AI'\n    },\n    {\n      id: 'job-status',\n      name: 'Job Status',\n      icon: Clock,\n      description: 'Track your video generation progress',\n      badge: jobCount > 0 ? jobCount : undefined\n    }\n  ];\n\n  return (\n    <nav className=\"bg-white border-b border-gray-200\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex space-x-8 overflow-x-auto\">\n          {tabs.map((tab) => {\n            const Icon = tab.icon;\n            const isActive = activeTab === tab.id;\n            \n            return (\n              <button\n                key={tab.id}\n                onClick={() => onTabChange(tab.id)}\n                className={`\n                  flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm whitespace-nowrap transition-colors\n                  ${isActive\n                    ? 'border-primary-500 text-primary-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }\n                `}\n              >\n                <Icon className=\"h-5 w-5\" />\n                <span>{tab.name}</span>\n                {tab.badge && (\n                  <span className=\"ml-2 bg-primary-100 text-primary-600 py-0.5 px-2 rounded-full text-xs font-medium\">\n                    {tab.badge}\n                  </span>\n                )}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default TabNavigation;","import axios, { AxiosResponse } from 'axios';\nimport {\n  VideoJob,\n  TextToVideoRequest,\n  ImageToVideoRequest,\n  VideoJobResponse,\n  HealthResponse,\n  ApiError\n} from '../types/api';\n\n// Configure axios base URL based on environment\nconst API_BASE_URL = import.meta.env.PROD \n  ? 'https://ai-video-creator-irf1.onrender.com'\n  : 'http://localhost:8000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(`[API] ${config.method?.toUpperCase()} ${config.url}`);\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.data?.detail) {\n      const apiError: ApiError = {\n        detail: error.response.data.detail,\n        error_code: error.response.data.error_code,\n        timestamp: Date.now()\n      };\n      return Promise.reject(apiError);\n    }\n    return Promise.reject({\n      detail: error.message || 'An unexpected error occurred',\n      timestamp: Date.now()\n    } as ApiError);\n  }\n);\n\n// API Service Class\nexport class VideoApiService {\n  // Health check endpoints\n  static async checkHealth(): Promise<HealthResponse> {\n    const response: AxiosResponse<HealthResponse> = await api.get('/health');\n    return response.data;\n  }\n\n  static async ping(): Promise<{ status: string; timestamp: number }> {\n    const response = await api.get('/ping');\n    return response.data;\n  }\n\n  // Video generation endpoints\n  static async generateVideoFromText(data: TextToVideoRequest): Promise<VideoJobResponse> {\n    const response: AxiosResponse<VideoJobResponse> = await api.post('/api/v1/video/generate/text', data);\n    return response.data;\n  }\n\n  static async generateVideoFromImage(data: ImageToVideoRequest, imageFile: File): Promise<VideoJobResponse> {\n    const formData = new FormData();\n    \n    // Append image file\n    formData.append('image', imageFile);\n    \n    // Append other data\n    Object.entries(data).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) {\n        formData.append(key, value.toString());\n      }\n    });\n\n    const response: AxiosResponse<VideoJobResponse> = await api.post('/api/v1/video/generate/image', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  }\n\n  // Job management endpoints\n  static async getJobStatus(jobId: string): Promise<VideoJob> {\n    const response: AxiosResponse<VideoJob> = await api.get(`/api/v1/status/jobs/${jobId}`);\n    return response.data;\n  }\n\n  static async getUserJobs(userId: string): Promise<VideoJob[]> {\n    const response: AxiosResponse<VideoJob[]> = await api.get(`/api/v1/status/user/${userId}/jobs`);\n    return response.data;\n  }\n\n  static async cancelJob(jobId: string): Promise<{ success: boolean; message: string }> {\n    const response = await api.post(`/api/v1/status/jobs/${jobId}/cancel`);\n    return response.data;\n  }\n\n  // Utility methods\n  static async downloadVideo(videoUrl: string): Promise<Blob> {\n    const response = await api.get(videoUrl, {\n      responseType: 'blob',\n    });\n    return response.data;\n  }\n}\n\nexport default VideoApiService;","import { create } from 'zustand';\nimport { VideoJob, TextToVideoForm, ImageToVideoForm } from '../types/api';\nimport VideoApiService from '../services/api';\n\ninterface VideoStore {\n  // State\n  jobs: VideoJob[];\n  activeJobs: VideoJob[];\n  currentUser: string;\n  isLoading: boolean;\n  error: string | null;\n\n  // Text-to-video form\n  textForm: TextToVideoForm;\n  setTextForm: (form: Partial<TextToVideoForm>) => void;\n  resetTextForm: () => void;\n\n  // Image-to-video form\n  imageForm: ImageToVideoForm;\n  setImageForm: (form: Partial<ImageToVideoForm>) => void;\n  resetImageForm: () => void;\n\n  // Actions\n  setCurrentUser: (userId: string) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  \n  // API actions\n  generateTextToVideo: () => Promise<string | null>;\n  generateImageToVideo: () => Promise<string | null>;\n  refreshJobStatus: (jobId: string) => Promise<void>;\n  loadUserJobs: () => Promise<void>;\n  startJobPolling: (jobId: string) => void;\n  stopJobPolling: (jobId: string) => void;\n  \n  // Utility\n  addJob: (job: VideoJob) => void;\n  updateJob: (jobId: string, updates: Partial<VideoJob>) => void;\n}\n\nconst defaultTextForm: TextToVideoForm = {\n  prompt: '',\n  duration: 5,\n  aspect_ratio: '16:9',\n  style: 'realistic',\n  quality: 'high'\n};\n\nconst defaultImageForm: ImageToVideoForm = {\n  prompt: '',\n  duration: 5,\n  motion_intensity: 'medium',\n  camera_movement: 'none',\n  image: null\n};\n\n// Generate a demo user ID\nconst generateUserId = () => `demo_user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\nconst pollingIntervals: Map<string, number> = new Map();\n\nexport const useVideoStore = create<VideoStore>((set, get) => ({\n  // Initial state\n  jobs: [],\n  activeJobs: [],\n  currentUser: generateUserId(),\n  isLoading: false,\n  error: null,\n  textForm: { ...defaultTextForm },\n  imageForm: { ...defaultImageForm },\n\n  // Form actions\n  setTextForm: (form) =>\n    set((state) => ({\n      textForm: { ...state.textForm, ...form }\n    })),\n\n  resetTextForm: () =>\n    set({ textForm: { ...defaultTextForm } }),\n\n  setImageForm: (form) =>\n    set((state) => ({\n      imageForm: { ...state.imageForm, ...form }\n    })),\n\n  resetImageForm: () =>\n    set({ imageForm: { ...defaultImageForm } }),\n\n  // Basic setters\n  setCurrentUser: (userId) => set({ currentUser: userId }),\n  setLoading: (loading) => set({ isLoading: loading }),\n  setError: (error) => set({ error }),\n\n  // API actions\n  generateTextToVideo: async () => {\n    const { textForm, currentUser, addJob } = get();\n    \n    try {\n      set({ isLoading: true, error: null });\n      \n      const response = await VideoApiService.generateVideoFromText({\n        ...textForm,\n        user_id: currentUser\n      });\n\n      // Add job to store\n      const newJob: VideoJob = {\n        id: response.job_id,\n        user_id: currentUser,\n        status: 'pending',\n        input_type: 'text',\n        input_data: textForm,\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n      \n      addJob(newJob);\n      get().startJobPolling(response.job_id);\n      \n      return response.job_id;\n    } catch (error: any) {\n      set({ error: error.detail || 'Failed to generate video' });\n      return null;\n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  generateImageToVideo: async () => {\n    const { imageForm, currentUser, addJob } = get();\n    \n    if (!imageForm.image) {\n      set({ error: 'Please select an image file' });\n      return null;\n    }\n\n    try {\n      set({ isLoading: true, error: null });\n      \n      const { image, ...requestData } = imageForm;\n      const response = await VideoApiService.generateVideoFromImage({\n        ...requestData,\n        user_id: currentUser\n      }, image);\n\n      // Add job to store\n      const newJob: VideoJob = {\n        id: response.job_id,\n        user_id: currentUser,\n        status: 'pending',\n        input_type: 'image',\n        input_data: { ...requestData, image_name: image.name },\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n      \n      addJob(newJob);\n      get().startJobPolling(response.job_id);\n      \n      return response.job_id;\n    } catch (error: any) {\n      set({ error: error.detail || 'Failed to generate video' });\n      return null;\n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  refreshJobStatus: async (jobId) => {\n    try {\n      const job = await VideoApiService.getJobStatus(jobId);\n      get().updateJob(jobId, job);\n      \n      // Stop polling if job is completed or failed\n      if (job.status === 'completed' || job.status === 'failed') {\n        get().stopJobPolling(jobId);\n      }\n    } catch (error: any) {\n      console.error('Failed to refresh job status:', error);\n    }\n  },\n\n  loadUserJobs: async () => {\n    const { currentUser } = get();\n    \n    try {\n      set({ isLoading: true, error: null });\n      const jobs = await VideoApiService.getUserJobs(currentUser);\n      set({ jobs });\n    } catch (error: any) {\n      set({ error: error.detail || 'Failed to load jobs' });\n    } finally {\n      set({ isLoading: false });\n    }\n  },\n\n  startJobPolling: (jobId) => {\n    // Clear existing interval if any\n    if (pollingIntervals.has(jobId)) {\n      clearInterval(pollingIntervals.get(jobId)!);\n    }\n\n    // Start new polling interval\n    const interval = window.setInterval(() => {\n      get().refreshJobStatus(jobId);\n    }, 5000); // Poll every 5 seconds\n\n    pollingIntervals.set(jobId, interval);\n  },\n\n  stopJobPolling: (jobId) => {\n    if (pollingIntervals.has(jobId)) {\n      window.clearInterval(pollingIntervals.get(jobId)!);\n      pollingIntervals.delete(jobId);\n    }\n  },\n\n  // Utility functions\n  addJob: (job) =>\n    set((state) => ({\n      jobs: [job, ...state.jobs],\n      activeJobs: job.status === 'pending' || job.status === 'in_progress' \n        ? [job, ...state.activeJobs] \n        : state.activeJobs\n    })),\n\n  updateJob: (jobId, updates) =>\n    set((state) => ({\n      jobs: state.jobs.map(job => \n        job.id === jobId ? { ...job, ...updates } : job\n      ),\n      activeJobs: state.activeJobs.map(job => \n        job.id === jobId ? { ...job, ...updates } : job\n      ).filter(job => job.status === 'pending' || job.status === 'in_progress')\n    })),\n}));","import React, { useState } from 'react';\nimport { Play, Sparkles, Loader2, AlertCircle } from 'lucide-react';\nimport { useVideoStore } from '../../stores/videoStore';\nimport { motion } from 'framer-motion';\n\nconst TextToVideoForm: React.FC = () => {\n  const {\n    textForm,\n    setTextForm,\n    resetTextForm,\n    generateTextToVideo,\n    isLoading,\n    error\n  } = useVideoStore();\n\n  const [localError, setLocalError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLocalError(null);\n\n    // Validation\n    if (!textForm.prompt.trim()) {\n      setLocalError('Please enter a prompt for your video');\n      return;\n    }\n\n    if (textForm.prompt.length < 10) {\n      setLocalError('Please provide a more detailed prompt (at least 10 characters)');\n      return;\n    }\n\n    try {\n      const jobId = await generateTextToVideo();\n      if (jobId) {\n        // Success - form will be reset by store if needed\n        console.log('Video generation started:', jobId);\n      }\n    } catch (error) {\n      setLocalError('Failed to start video generation. Please try again.');\n    }\n  };\n\n  const handleReset = () => {\n    resetTextForm();\n    setLocalError(null);\n  };\n\n  const displayError = localError || error;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center space-x-2 mb-4\">\n            <Sparkles className=\"h-8 w-8 text-primary-600\" />\n            <h2 className=\"text-2xl font-bold text-gray-900\">Text to Video</h2>\n          </div>\n          <p className=\"text-gray-600\">\n            Describe your vision and let AI create a stunning video for you\n          </p>\n        </div>\n\n        {/* Error display */}\n        {displayError && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"mb-6 p-4 bg-error-50 border border-error-200 rounded-lg flex items-center space-x-3\"\n          >\n            <AlertCircle className=\"h-5 w-5 text-error-600 flex-shrink-0\" />\n            <p className=\"text-error-700 text-sm\">{displayError}</p>\n          </motion.div>\n        )}\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Prompt input */}\n          <div>\n            <label htmlFor=\"prompt\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Video Prompt *\n            </label>\n            <textarea\n              id=\"prompt\"\n              value={textForm.prompt}\n              onChange={(e) => setTextForm({ prompt: e.target.value })}\n              placeholder=\"Describe the video you want to create... e.g., 'A serene sunset over calm ocean waters with gentle waves and seabirds flying in the distance'\"\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent resize-none transition-colors\"\n              rows={4}\n              disabled={isLoading}\n              maxLength={1000}\n            />\n            <div className=\"flex justify-between items-center mt-1\">\n              <p className=\"text-xs text-gray-500\">\n                Be specific and descriptive for better results\n              </p>\n              <p className=\"text-xs text-gray-400\">\n                {textForm.prompt.length}/1000\n              </p>\n            </div>\n          </div>\n\n          {/* Configuration row */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            {/* Duration */}\n            <div>\n              <label htmlFor=\"duration\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Duration (seconds)\n              </label>\n              <select\n                id=\"duration\"\n                value={textForm.duration}\n                onChange={(e) => setTextForm({ duration: Number(e.target.value) })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                disabled={isLoading}\n              >\n                <option value={3}>3 seconds</option>\n                <option value={5}>5 seconds</option>\n                <option value={8}>8 seconds</option>\n                <option value={10}>10 seconds</option>\n                <option value={15}>15 seconds</option>\n              </select>\n            </div>\n\n            {/* Aspect Ratio */}\n            <div>\n              <label htmlFor=\"aspect_ratio\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Aspect Ratio\n              </label>\n              <select\n                id=\"aspect_ratio\"\n                value={textForm.aspect_ratio}\n                onChange={(e) => setTextForm({ aspect_ratio: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                disabled={isLoading}\n              >\n                <option value=\"16:9\">16:9 (Landscape)</option>\n                <option value=\"9:16\">9:16 (Portrait)</option>\n                <option value=\"1:1\">1:1 (Square)</option>\n                <option value=\"4:3\">4:3 (Classic)</option>\n              </select>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            {/* Style */}\n            <div>\n              <label htmlFor=\"style\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Style\n              </label>\n              <select\n                id=\"style\"\n                value={textForm.style}\n                onChange={(e) => setTextForm({ style: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                disabled={isLoading}\n              >\n                <option value=\"realistic\">Realistic</option>\n                <option value=\"cinematic\">Cinematic</option>\n                <option value=\"anime\">Anime</option>\n                <option value=\"cartoon\">Cartoon</option>\n                <option value=\"artistic\">Artistic</option>\n              </select>\n            </div>\n\n            {/* Quality */}\n            <div>\n              <label htmlFor=\"quality\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Quality\n              </label>\n              <select\n                id=\"quality\"\n                value={textForm.quality}\n                onChange={(e) => setTextForm({ quality: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                disabled={isLoading}\n              >\n                <option value=\"standard\">Standard</option>\n                <option value=\"high\">High Quality</option>\n                <option value=\"premium\">Premium</option>\n              </select>\n            </div>\n          </div>\n\n          {/* Action buttons */}\n          <div className=\"flex space-x-4 pt-4\">\n            <button\n              type=\"submit\"\n              disabled={isLoading || !textForm.prompt.trim()}\n              className={`\n                flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all\n                ${isLoading || !textForm.prompt.trim()\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-primary-600 text-white hover:bg-primary-700 hover:shadow-lg transform hover:scale-[1.02]'\n                }\n              `}\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\n                  <span>Generating Video...</span>\n                </>\n              ) : (\n                <>\n                  <Play className=\"h-5 w-5\" />\n                  <span>Generate Video</span>\n                </>\n              )}\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={handleReset}\n              disabled={isLoading}\n              className=\"px-6 py-3 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg font-medium transition-colors disabled:opacity-50\"\n            >\n              Reset\n            </button>\n          </div>\n        </form>\n\n        {/* Tips */}\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n          <h4 className=\"font-medium text-blue-900 mb-2\">💡 Pro Tips</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Be specific about what you want to see in the video</li>\n            <li>• Include details about lighting, camera angles, and movement</li>\n            <li>• Mention the setting, time of day, and atmosphere</li>\n            <li>• For better results, describe actions and emotions</li>\n          </ul>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default TextToVideoForm;","import React, { useState } from 'react';\nimport { Play, Image, Loader2, AlertCircle, Upload } from 'lucide-react';\nimport { useVideoStore } from '../../stores/videoStore';\nimport { motion } from 'framer-motion';\n\nconst ImageToVideoForm: React.FC = () => {\n  const {\n    imageForm,\n    setImageForm,\n    resetImageForm,\n    generateImageToVideo,\n    isLoading,\n    error\n  } = useVideoStore();\n\n  const [localError, setLocalError] = useState<string | null>(null);\n  const [_imagePreview, _setImagePreview] = useState<string | null>(null);\n\n  // TODO(human): Implement drag-and-drop image upload functionality\n  // This should handle file validation, preview display, and proper error states\n  // Consider file types (.jpg, .jpeg, .png, .webp, .gif), size limits (10MB max),\n  // show image preview with ability to remove/replace, and integrate with form state\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLocalError(null);\n\n    // Validation\n    if (!imageForm.prompt.trim()) {\n      setLocalError('Please enter a prompt describing the motion you want');\n      return;\n    }\n\n    if (!imageForm.image) {\n      setLocalError('Please upload an image to animate');\n      return;\n    }\n\n    if (imageForm.prompt.length < 5) {\n      setLocalError('Please provide a more detailed motion description (at least 5 characters)');\n      return;\n    }\n\n    try {\n      const jobId = await generateImageToVideo();\n      if (jobId) {\n        console.log('Image-to-video generation started:', jobId);\n        // Reset form after successful submission\n        handleReset();\n      }\n    } catch (error) {\n      setLocalError('Failed to start video generation. Please try again.');\n    }\n  };\n\n  const handleReset = () => {\n    resetImageForm();\n    setLocalError(null);\n    _setImagePreview(null);\n  };\n\n  const displayError = localError || error;\n\n  return (\n    <div className=\"max-w-2xl mx-auto p-6\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"flex items-center justify-center space-x-2 mb-4\">\n            <Image className=\"h-8 w-8 text-primary-600\" />\n            <h2 className=\"text-2xl font-bold text-gray-900\">Image to Video</h2>\n          </div>\n          <p className=\"text-gray-600\">\n            Upload an image and describe the motion you want to add\n          </p>\n        </div>\n\n        {/* Error display */}\n        {displayError && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"mb-6 p-4 bg-error-50 border border-error-200 rounded-lg flex items-center space-x-3\"\n          >\n            <AlertCircle className=\"h-5 w-5 text-error-600 flex-shrink-0\" />\n            <p className=\"text-error-700 text-sm\">{displayError}</p>\n          </motion.div>\n        )}\n\n        {/* Form */}\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Image Upload Section - TODO(human) implementation needed */}\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Upload Image *\n            </label>\n            \n            {/* Placeholder dropzone - TODO(human): Replace with react-dropzone implementation */}\n            <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-primary-400 transition-colors\">\n              <Upload className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <p className=\"text-gray-600 mb-2\">Drag and drop an image here, or click to select</p>\n              <p className=\"text-sm text-gray-500\">Supports JPG, PNG, WEBP, GIF up to 10MB</p>\n              \n              {/* File input fallback */}\n              <input\n                type=\"file\"\n                accept=\".jpg,.jpeg,.png,.webp,.gif\"\n                className=\"hidden\"\n                id=\"image-upload\"\n              />\n              <label\n                htmlFor=\"image-upload\"\n                className=\"mt-4 inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 cursor-pointer\"\n              >\n                Choose File\n              </label>\n            </div>\n          </div>\n\n          {/* Motion Prompt */}\n          <div>\n            <label htmlFor=\"motion-prompt\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Motion Description *\n            </label>\n            <textarea\n              id=\"motion-prompt\"\n              value={imageForm.prompt}\n              onChange={(e) => setImageForm({ prompt: e.target.value })}\n              placeholder=\"Describe the motion you want to add... e.g., 'Gentle wind blowing through the trees, leaves rustling softly'\"\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent resize-none transition-colors\"\n              rows={3}\n              disabled={isLoading}\n              maxLength={500}\n            />\n            <div className=\"flex justify-between items-center mt-1\">\n              <p className=\"text-xs text-gray-500\">\n                Describe the motion, not the scene\n              </p>\n              <p className=\"text-xs text-gray-400\">\n                {imageForm.prompt.length}/500\n              </p>\n            </div>\n          </div>\n\n          {/* Configuration row */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            {/* Duration */}\n            <div>\n              <label htmlFor=\"duration\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Duration (seconds)\n              </label>\n              <select\n                id=\"duration\"\n                value={imageForm.duration}\n                onChange={(e) => setImageForm({ duration: Number(e.target.value) })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                disabled={isLoading}\n              >\n                <option value={3}>3 seconds</option>\n                <option value={5}>5 seconds</option>\n                <option value={8}>8 seconds</option>\n                <option value={10}>10 seconds</option>\n              </select>\n            </div>\n\n            {/* Motion Intensity */}\n            <div>\n              <label htmlFor=\"motion_intensity\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Motion Intensity\n              </label>\n              <select\n                id=\"motion_intensity\"\n                value={imageForm.motion_intensity}\n                onChange={(e) => setImageForm({ motion_intensity: e.target.value })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n                disabled={isLoading}\n              >\n                <option value=\"subtle\">Subtle</option>\n                <option value=\"medium\">Medium</option>\n                <option value=\"strong\">Strong</option>\n                <option value=\"dramatic\">Dramatic</option>\n              </select>\n            </div>\n          </div>\n\n          {/* Camera Movement */}\n          <div>\n            <label htmlFor=\"camera_movement\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n              Camera Movement\n            </label>\n            <select\n              id=\"camera_movement\"\n              value={imageForm.camera_movement}\n              onChange={(e) => setImageForm({ camera_movement: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent\"\n              disabled={isLoading}\n            >\n              <option value=\"none\">None</option>\n              <option value=\"subtle_zoom\">Subtle Zoom</option>\n              <option value=\"pan_left\">Pan Left</option>\n              <option value=\"pan_right\">Pan Right</option>\n              <option value=\"tilt_up\">Tilt Up</option>\n              <option value=\"tilt_down\">Tilt Down</option>\n            </select>\n          </div>\n\n          {/* Action buttons */}\n          <div className=\"flex space-x-4 pt-4\">\n            <button\n              type=\"submit\"\n              disabled={isLoading || !imageForm.prompt.trim() || !imageForm.image}\n              className={`\n                flex-1 flex items-center justify-center space-x-2 py-3 px-6 rounded-lg font-medium transition-all\n                ${isLoading || !imageForm.prompt.trim() || !imageForm.image\n                  ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                  : 'bg-primary-600 text-white hover:bg-primary-700 hover:shadow-lg transform hover:scale-[1.02]'\n                }\n              `}\n            >\n              {isLoading ? (\n                <>\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\n                  <span>Animating Image...</span>\n                </>\n              ) : (\n                <>\n                  <Play className=\"h-5 w-5\" />\n                  <span>Animate Image</span>\n                </>\n              )}\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={handleReset}\n              disabled={isLoading}\n              className=\"px-6 py-3 text-gray-600 hover:text-gray-800 hover:bg-gray-100 rounded-lg font-medium transition-colors disabled:opacity-50\"\n            >\n              Reset\n            </button>\n          </div>\n        </form>\n\n        {/* Tips */}\n        <div className=\"mt-8 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n          <h4 className=\"font-medium text-blue-900 mb-2\">💡 Animation Tips</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Focus on describing motion, not the scene content</li>\n            <li>• Use natural movement descriptions (flowing, swaying, floating)</li>\n            <li>• Consider the physics of your scene (wind, gravity, momentum)</li>\n            <li>• Start with subtle motion and experiment with intensity</li>\n          </ul>\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ImageToVideoForm;","import React from 'react';\nimport { \n  Clock, \n  CheckCircle, \n  XCircle, \n  Loader2, \n  Download, \n  Eye, \n  Type, \n  Image as ImageIcon,\n  Calendar,\n  Timer\n} from 'lucide-react';\nimport { VideoJob } from '../../types/api';\nimport { motion } from 'framer-motion';\n\ninterface JobStatusCardProps {\n  job: VideoJob;\n  onDownload?: (job: VideoJob) => void;\n  onPreview?: (job: VideoJob) => void;\n}\n\nconst JobStatusCard: React.FC<JobStatusCardProps> = ({ job, onDownload, onPreview }) => {\n  const getStatusInfo = (status: VideoJob['status']) => {\n    switch (status) {\n      case 'pending':\n        return {\n          icon: Clock,\n          color: 'text-yellow-600',\n          bgColor: 'bg-yellow-50',\n          borderColor: 'border-yellow-200',\n          text: 'Pending'\n        };\n      case 'in_progress':\n        return {\n          icon: Loader2,\n          color: 'text-blue-600',\n          bgColor: 'bg-blue-50',\n          borderColor: 'border-blue-200',\n          text: 'Generating',\n          animate: true\n        };\n      case 'completed':\n        return {\n          icon: CheckCircle,\n          color: 'text-success-600',\n          bgColor: 'bg-success-50',\n          borderColor: 'border-success-200',\n          text: 'Completed'\n        };\n      case 'failed':\n        return {\n          icon: XCircle,\n          color: 'text-error-600',\n          bgColor: 'bg-error-50',\n          borderColor: 'border-error-200',\n          text: 'Failed'\n        };\n    }\n  };\n\n  const statusInfo = getStatusInfo(job.status);\n  const StatusIcon = statusInfo.icon;\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatDuration = (seconds?: number) => {\n    if (!seconds) return 'N/A';\n    if (seconds < 60) return `${Math.round(seconds)}s`;\n    return `${Math.floor(seconds / 60)}m ${Math.round(seconds % 60)}s`;\n  };\n\n  const getInputTypeInfo = (inputType: VideoJob['input_type']) => {\n    return inputType === 'text' \n      ? { icon: Type, label: 'Text to Video', color: 'text-purple-600' }\n      : { icon: ImageIcon, label: 'Image to Video', color: 'text-blue-600' };\n  };\n\n  const inputInfo = getInputTypeInfo(job.input_type);\n  const InputIcon = inputInfo.icon;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 10 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.3 }}\n      className={`\n        p-6 rounded-lg border-2 transition-all hover:shadow-lg\n        ${statusInfo.bgColor} ${statusInfo.borderColor}\n      `}\n    >\n      {/* Header */}\n      <div className=\"flex items-start justify-between mb-4\">\n        <div className=\"flex items-center space-x-3\">\n          <div className={`p-2 rounded-lg ${statusInfo.bgColor}`}>\n            <StatusIcon \n              className={`h-5 w-5 ${statusInfo.color} ${statusInfo.animate ? 'animate-spin' : ''}`} \n            />\n          </div>\n          <div>\n            <div className=\"flex items-center space-x-2\">\n              <InputIcon className={`h-4 w-4 ${inputInfo.color}`} />\n              <span className=\"text-sm font-medium text-gray-600\">{inputInfo.label}</span>\n            </div>\n            <p className={`text-sm font-medium ${statusInfo.color}`}>\n              {statusInfo.text}\n            </p>\n          </div>\n        </div>\n        \n        <div className=\"text-xs text-gray-500\">\n          ID: {job.id.slice(0, 8)}...\n        </div>\n      </div>\n\n      {/* Content Preview */}\n      <div className=\"mb-4\">\n        {job.input_type === 'text' ? (\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">Prompt:</p>\n            <p className=\"text-sm text-gray-900 line-clamp-2\">\n              {job.input_data.prompt || 'No prompt available'}\n            </p>\n          </div>\n        ) : (\n          <div>\n            <p className=\"text-sm text-gray-600 mb-1\">Motion Description:</p>\n            <p className=\"text-sm text-gray-900 line-clamp-2\">\n              {job.input_data.prompt || 'No description available'}\n            </p>\n            {job.input_data.image_name && (\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Image: {job.input_data.image_name}\n              </p>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Configuration */}\n      <div className=\"grid grid-cols-2 gap-4 mb-4 text-xs text-gray-600\">\n        <div className=\"flex items-center space-x-1\">\n          <Timer className=\"h-3 w-3\" />\n          <span>Duration: {job.input_data.duration || 'N/A'}s</span>\n        </div>\n        <div className=\"flex items-center space-x-1\">\n          <Calendar className=\"h-3 w-3\" />\n          <span>Created: {formatDate(job.created_at)}</span>\n        </div>\n      </div>\n\n      {/* Error message for failed jobs */}\n      {job.status === 'failed' && job.error_message && (\n        <div className=\"mb-4 p-3 bg-error-50 border border-error-200 rounded-lg\">\n          <p className=\"text-sm text-error-800\">\n            <span className=\"font-medium\">Error:</span> {job.error_message}\n          </p>\n        </div>\n      )}\n\n      {/* Progress for in-progress jobs */}\n      {job.status === 'in_progress' && (\n        <div className=\"mb-4\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm text-gray-600\">Processing...</span>\n            <span className=\"text-xs text-gray-500\">\n              Started {formatDate(job.updated_at)}\n            </span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div className=\"bg-blue-600 h-2 rounded-full animate-pulse-slow\" style={{ width: '60%' }}></div>\n          </div>\n        </div>\n      )}\n\n      {/* Completion info for completed jobs */}\n      {job.status === 'completed' && (\n        <div className=\"mb-4 text-xs text-gray-600\">\n          <div className=\"flex justify-between\">\n            <span>Completed: {job.completed_at ? formatDate(job.completed_at) : 'N/A'}</span>\n            <span>Processing time: {formatDuration(job.processing_time)}</span>\n          </div>\n        </div>\n      )}\n\n      {/* Actions */}\n      {job.status === 'completed' && job.output_data?.video_url && (\n        <div className=\"flex space-x-3\">\n          <button\n            onClick={() => onPreview?.(job)}\n            className=\"flex-1 flex items-center justify-center space-x-2 py-2 px-4 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 hover:border-gray-400 transition-colors\"\n          >\n            <Eye className=\"h-4 w-4\" />\n            <span>Preview</span>\n          </button>\n          \n          <button\n            onClick={() => onDownload?.(job)}\n            className=\"flex-1 flex items-center justify-center space-x-2 py-2 px-4 bg-primary-600 text-white rounded-lg text-sm font-medium hover:bg-primary-700 transition-colors\"\n          >\n            <Download className=\"h-4 w-4\" />\n            <span>Download</span>\n          </button>\n        </div>\n      )}\n    </motion.div>\n  );\n};\n\nexport default JobStatusCard;","import React, { useEffect, useState } from 'react';\nimport { RefreshCw, AlertCircle, Inbox, Filter } from 'lucide-react';\nimport { useVideoStore } from '../../stores/videoStore';\nimport { VideoJob } from '../../types/api';\nimport JobStatusCard from './JobStatusCard';\nimport VideoApiService from '../../services/api';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nconst JobStatusList: React.FC = () => {\n  const {\n    jobs,\n    currentUser,\n    loadUserJobs,\n    isLoading,\n    error\n  } = useVideoStore();\n\n  const [filter, setFilter] = useState<'all' | 'active' | 'completed' | 'failed'>('all');\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  useEffect(() => {\n    // Load user jobs on component mount\n    loadUserJobs();\n  }, [loadUserJobs]);\n\n  const handleRefresh = async () => {\n    setIsRefreshing(true);\n    try {\n      await loadUserJobs();\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  const handleDownload = async (job: VideoJob) => {\n    if (!job.output_data?.video_url) return;\n\n    try {\n      const blob = await VideoApiService.downloadVideo(job.output_data.video_url);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `video_${job.id}.mp4`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      console.error('Failed to download video:', error);\n      // TODO: Show toast notification\n    }\n  };\n\n  const handlePreview = (job: VideoJob) => {\n    if (job.output_data?.video_url) {\n      window.open(job.output_data.video_url, '_blank');\n    }\n  };\n\n  const getFilteredJobs = () => {\n    switch (filter) {\n      case 'active':\n        return jobs.filter(job => job.status === 'pending' || job.status === 'in_progress');\n      case 'completed':\n        return jobs.filter(job => job.status === 'completed');\n      case 'failed':\n        return jobs.filter(job => job.status === 'failed');\n      default:\n        return jobs;\n    }\n  };\n\n  const filteredJobs = getFilteredJobs();\n\n  const getFilterCounts = () => {\n    return {\n      all: jobs.length,\n      active: jobs.filter(job => job.status === 'pending' || job.status === 'in_progress').length,\n      completed: jobs.filter(job => job.status === 'completed').length,\n      failed: jobs.filter(job => job.status === 'failed').length\n    };\n  };\n\n  const counts = getFilterCounts();\n\n  const filters = [\n    { id: 'all', label: 'All Jobs', count: counts.all },\n    { id: 'active', label: 'Active', count: counts.active },\n    { id: 'completed', label: 'Completed', count: counts.completed },\n    { id: 'failed', label: 'Failed', count: counts.failed }\n  ] as const;\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Video Generation Jobs</h2>\n            <p className=\"text-gray-600\">\n              Track the progress of your video generation requests\n            </p>\n          </div>\n\n          <button\n            onClick={handleRefresh}\n            disabled={isLoading || isRefreshing}\n            className={`\n              flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-all\n              ${isLoading || isRefreshing\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50 hover:border-gray-400'\n              }\n            `}\n          >\n            <RefreshCw className={`h-4 w-4 ${(isLoading || isRefreshing) ? 'animate-spin' : ''}`} />\n            <span>Refresh</span>\n          </button>\n        </div>\n\n        {/* Error display */}\n        {error && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.95 }}\n            animate={{ opacity: 1, scale: 1 }}\n            className=\"mb-6 p-4 bg-error-50 border border-error-200 rounded-lg flex items-center space-x-3\"\n          >\n            <AlertCircle className=\"h-5 w-5 text-error-600 flex-shrink-0\" />\n            <p className=\"text-error-700 text-sm\">{error}</p>\n          </motion.div>\n        )}\n\n        {/* Filter tabs */}\n        <div className=\"flex items-center space-x-1 mb-6 overflow-x-auto\">\n          <Filter className=\"h-4 w-4 text-gray-500 flex-shrink-0 mr-2\" />\n          {filters.map((filterOption) => (\n            <button\n              key={filterOption.id}\n              onClick={() => setFilter(filterOption.id)}\n              className={`\n                flex items-center space-x-2 px-4 py-2 rounded-lg font-medium text-sm transition-colors whitespace-nowrap\n                ${filter === filterOption.id\n                  ? 'bg-primary-100 text-primary-700 border border-primary-200'\n                  : 'text-gray-600 hover:text-gray-900 hover:bg-gray-100'\n                }\n              `}\n            >\n              <span>{filterOption.label}</span>\n              {filterOption.count > 0 && (\n                <span className={`\n                  px-2 py-0.5 rounded-full text-xs font-medium\n                  ${filter === filterOption.id\n                    ? 'bg-primary-200 text-primary-800'\n                    : 'bg-gray-200 text-gray-600'\n                  }\n                `}>\n                  {filterOption.count}\n                </span>\n              )}\n            </button>\n          ))}\n        </div>\n\n        {/* User info */}\n        <div className=\"mb-6 p-3 bg-blue-50 rounded-lg border border-blue-200\">\n          <p className=\"text-sm text-blue-800\">\n            <span className=\"font-medium\">Current Session ID:</span> {currentUser}\n          </p>\n          <p className=\"text-xs text-blue-600 mt-1\">\n            Jobs are tracked for this session. Bookmark this page to return to your jobs later.\n          </p>\n        </div>\n\n        {/* Job list */}\n        <AnimatePresence mode=\"wait\">\n          {isLoading && jobs.length === 0 ? (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"text-center py-12\"\n            >\n              <RefreshCw className=\"h-8 w-8 text-gray-400 animate-spin mx-auto mb-4\" />\n              <p className=\"text-gray-600\">Loading your jobs...</p>\n            </motion.div>\n          ) : filteredJobs.length === 0 ? (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"text-center py-12\"\n            >\n              <Inbox className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                {filter === 'all' ? 'No jobs yet' : `No ${filter} jobs`}\n              </h3>\n              <p className=\"text-gray-600 mb-4\">\n                {filter === 'all'\n                  ? 'Start by creating your first video using the generation tabs above.'\n                  : `You don't have any ${filter} jobs at the moment.`\n                }\n              </p>\n              {filter !== 'all' && (\n                <button\n                  onClick={() => setFilter('all')}\n                  className=\"text-primary-600 hover:text-primary-700 font-medium\"\n                >\n                  View all jobs\n                </button>\n              )}\n            </motion.div>\n          ) : (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"space-y-4\"\n            >\n              {filteredJobs.map((job) => (\n                <JobStatusCard\n                  key={job.id}\n                  job={job}\n                  onDownload={handleDownload}\n                  onPreview={handlePreview}\n                />\n              ))}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default JobStatusList;","import React, { useState, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport Header from './components/ui/Header';\nimport TabNavigation from './components/ui/TabNavigation';\nimport TextToVideoForm from './components/forms/TextToVideoForm';\nimport ImageToVideoForm from './components/forms/ImageToVideoForm';\nimport JobStatusList from './components/status/JobStatusList';\nimport { useVideoStore } from './stores/videoStore';\nimport VideoApiService from './services/api';\nimport { motion } from 'framer-motion';\nimport { AlertCircle, CheckCircle } from 'lucide-react';\n\nconst App: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>('text-to-video');\n  const [healthStatus, setHealthStatus] = useState<'checking' | 'healthy' | 'unhealthy'>('checking');\n  \n  const { jobs } = useVideoStore();\n\n  // Check backend health on app start\n  useEffect(() => {\n    const checkHealth = async () => {\n      try {\n        await VideoApiService.ping();\n        setHealthStatus('healthy');\n      } catch (error) {\n        console.error('Backend health check failed:', error);\n        setHealthStatus('unhealthy');\n      }\n    };\n\n    checkHealth();\n  }, []);\n\n  const renderTabContent = () => {\n    switch (activeTab) {\n      case 'text-to-video':\n        return <TextToVideoForm />;\n      case 'image-to-video':\n        return <ImageToVideoForm />;\n      case 'job-status':\n        return <JobStatusList />;\n      default:\n        return <TextToVideoForm />;\n    }\n  };\n\n  const getActiveJobCount = () => {\n    return jobs.filter(job => job.status === 'pending' || job.status === 'in_progress').length;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Toast notifications */}\n      <Toaster\n        position=\"top-right\"\n        toastOptions={{\n          duration: 4000,\n          style: {\n            background: '#363636',\n            color: '#fff',\n          },\n          success: {\n            duration: 3000,\n            iconTheme: {\n              primary: '#10B981',\n              secondary: '#fff',\n            },\n          },\n          error: {\n            duration: 5000,\n            iconTheme: {\n              primary: '#EF4444',\n              secondary: '#fff',\n            },\n          },\n        }}\n      />\n\n      {/* Header */}\n      <Header />\n\n      {/* Health status banner */}\n      {healthStatus === 'unhealthy' && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"bg-error-500 text-white px-4 py-3 text-center\"\n        >\n          <div className=\"flex items-center justify-center space-x-2\">\n            <AlertCircle className=\"h-5 w-5\" />\n            <span className=\"text-sm font-medium\">\n              Backend service is currently unavailable. Some features may not work properly.\n            </span>\n          </div>\n        </motion.div>\n      )}\n\n      {healthStatus === 'healthy' && (\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          exit={{ opacity: 0, y: -20 }}\n          className=\"bg-success-500 text-white px-4 py-3 text-center\"\n        >\n          <div className=\"flex items-center justify-center space-x-2\">\n            <CheckCircle className=\"h-5 w-5\" />\n            <span className=\"text-sm font-medium\">\n              🎬 AI Video Creator is online and ready to generate amazing videos!\n            </span>\n          </div>\n        </motion.div>\n      )}\n\n      {/* Tab Navigation */}\n      <TabNavigation\n        activeTab={activeTab}\n        onTabChange={setActiveTab}\n        jobCount={getActiveJobCount()}\n      />\n\n      {/* Main Content */}\n      <main className=\"py-8\">\n        <motion.div\n          key={activeTab}\n          initial={{ opacity: 0, x: 20 }}\n          animate={{ opacity: 1, x: 0 }}\n          exit={{ opacity: 0, x: -20 }}\n          transition={{ duration: 0.3 }}\n        >\n          {renderTabContent()}\n        </motion.div>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-white border-t border-gray-200 mt-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"text-sm text-gray-600\">\n              <p>© 2024 AI Video Creator. Powered by Google AI Studio & Kling AI.</p>\n            </div>\n            <div className=\"flex items-center space-x-6 text-sm text-gray-600\">\n              <a\n                href=\"https://djyalu.github.io/ai_video_creator\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"hover:text-primary-600 transition-colors\"\n              >\n                Documentation\n              </a>\n              <a\n                href=\"https://ai-video-creator-irf1.onrender.com/docs\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"hover:text-primary-600 transition-colors\"\n              >\n                API Reference\n              </a>\n              <a\n                href=\"https://github.com/djyalu/ai_video_creator\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"hover:text-primary-600 transition-colors\"\n              >\n                Source Code\n              </a>\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App.tsx'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["m","require$$0","client","Header","jsx","jsxs","Video","Zap","ExternalLink","Github","TabNavigation","activeTab","onTabChange","jobCount","tabs","Type","Image","Clock","tab","Icon","isActive","API_BASE_URL","api","axios","config","_a","error","response","_b","apiError","VideoApiService","data","imageFile","formData","key","value","jobId","userId","videoUrl","defaultTextForm","defaultImageForm","generateUserId","pollingIntervals","useVideoStore","create","set","get","form","state","loading","textForm","currentUser","addJob","newJob","imageForm","image","requestData","job","jobs","interval","updates","TextToVideoForm","setTextForm","resetTextForm","generateTextToVideo","isLoading","localError","setLocalError","useState","handleSubmit","e","handleReset","displayError","motion","Sparkles","AlertCircle","Fragment","Loader2","Play","ImageToVideoForm","setImageForm","resetImageForm","generateImageToVideo","_imagePreview","_setImagePreview","Upload","JobStatusCard","onDownload","onPreview","statusInfo","status","CheckCircle","XCircle","StatusIcon","formatDate","dateString","formatDuration","seconds","inputInfo","inputType","ImageIcon","InputIcon","Timer","Calendar","Eye","Download","JobStatusList","loadUserJobs","filter","setFilter","isRefreshing","setIsRefreshing","useEffect","handleRefresh","handleDownload","blob","url","a","handlePreview","filteredJobs","counts","filters","RefreshCw","Filter","filterOption","AnimatePresence","Inbox","App","setActiveTab","healthStatus","setHealthStatus","renderTabContent","getActiveJobCount","Toaster","ReactDOM","React"],"mappings":"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","x_google_ignoreList":[0]}